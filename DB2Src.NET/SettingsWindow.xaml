<Window x:Class="Db2Source.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Db2Source"
        xmlns:local2="clr-namespace:Db2Source;assembly=Db2SrcDataSet"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        FontFamily="{Binding FontFamily, Source={StaticResource BaseFont}}" FontSize="{Binding FontSize, Source={StaticResource BaseFont}}" FontStretch="{Binding FontStretch, Source={StaticResource BaseFont}}" FontStyle="{Binding FontStyle, Source={StaticResource BaseFont}}" FontWeight="{Binding FontWeight, Source={StaticResource BaseFont}}"
        Title="設定" Height="300" Width="427.811" Loaded="Window_Loaded" WindowStartupLocation="CenterOwner" LocationChanged="Window_LocationChanged">
    <Window.Resources>
        <Style x:Key="FontTextBlockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="2,0"/>
            <Setter Property="FontFamily" Value="{Binding FontFamily}"/>
            <Setter Property="FontSize" Value="{Binding FontSize}"/>
            <Setter Property="FontStretch" Value="{Binding FontStretch}"/>
            <Setter Property="FontStyle" Value="{Binding FontStyle}"/>
            <Setter Property="FontWeight" Value="{Binding FontWeight}"/>
        </Style>
        <DataTemplate x:Key="FontButtonTemplate">
            <Grid>
                <Button Content="変更" Padding="2" Click="ButtonChangeFont_Click"/>
            </Grid>
        </DataTemplate>
        <Style x:Key="DataGridButtonCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="true"/>
                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <DockPanel>
        <local:EquallyStackPanel HorizontalAlignment="Center" Orientation="Horizontal" DockPanel.Dock="Bottom">
            <Button x:Name="buttonOK" Content="OK" Margin="5" Padding="5" MinWidth="70" Click="buttonOK_Click"/>
            <Button x:Name="buttonCancel" Content="キャンセル" IsCancel="True" Margin="5" Padding="5" MinWidth="70" Click="buttonCancel_Click"/>
        </local:EquallyStackPanel>
        <TreeView DockPanel.Dock="Left">
            <TreeViewItem Header="表示" IsExpanded="True">
                <TreeViewItem Header="フォント"/>
            </TreeViewItem>
        </TreeView>
        <TabControl>
            <TabItem>
                <DataGrid x:Name="dataGridFont" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="対象" Binding="{Binding Title}"/>
                        <DataGridTemplateColumn x:Name="dataGridColumnFontButton" CellTemplate="{DynamicResource FontButtonTemplate}" CellStyle="{DynamicResource DataGridButtonCellStyle}"/>
                        <DataGridTextColumn Header="フォント" Binding="{Binding}" ElementStyle="{DynamicResource FontTextBlockStyle}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>
