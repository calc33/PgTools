<Window x:Name="window" x:Class="Db2Source.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Db2Source"
        mc:Ignorable="d"
        Title="DB2Source.NET" Height="600" Width="800" Initialized="window_Initialized" FontSize="14" FontFamily="Source Han Code JP Light" Loaded="window_Loaded" Closing="window_Closing">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="WindowBackground" Color="{x:Static SystemColors.ControlColor}"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB"/>
        <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181"/>
        <DataTemplate x:Key="ImageServer">
            <Grid Margin="{Binding Padding, RelativeSource={RelativeSource AncestorType=TreeViewItem}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Canvas Width="16" Height="16" HorizontalAlignment="Center">
                    <Path Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" StrokeThickness="1" Data="M3.5,0.5 L12.5,0.5 L13.5,1.5 L13.5,14.5 L12.5,15.5 L3.5,15.5 L2.5,14.5 L2.5,1.5 z"/>
                    <Path Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" StrokeThickness="1" Data="M4,3.5 L12,3.5 M4,5.5 L12,5.5 M4,7.5 L12,7.5"/>
                    <Rectangle Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" Canvas.Left="7" Canvas.Top="11" Width="2" Height="2"/>
                </Canvas>
                <TextBlock Grid.Column="1" Text="{Binding Content, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" Padding="2"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ImageDatabase">
            <Grid Margin="{Binding Padding, RelativeSource={RelativeSource AncestorType=TreeViewItem}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Canvas Width="18" Height="16" HorizontalAlignment="Center">
                    <Path StrokeThickness="1" Stroke="Black" Fill="#FFF0F0F0" Data="M1.5,3 L1.5,11 A6,3,0,0,0,13.5,11 L13.5,3 A6,3,0,0,0,1.5,3"/>
                    <Path StrokeThickness="1" Stroke="Black" Data="M1.5,3 A6,3,0,0,0,13.5,3" />
                    <Path StrokeThickness="0.5" Stroke="#FF202020" Data="M1.5,7 A6,3,0,0,0,13.5,7" />
                </Canvas>
                <TextBlock Grid.Column="1" Text="{Binding Content, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" Padding="2"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ImageOtherDatabase">
            <Grid Margin="{Binding Padding, RelativeSource={RelativeSource AncestorType=TreeViewItem}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Canvas Width="34" Height="16" HorizontalAlignment="Center">
                    <Path StrokeThickness="1" Stroke="Gray" Fill="#FFF0F0F0" Data="M1.5,3 L1.5,11 A6,3,0,0,0,13.5,11 L13.5,3 A6,3,0,0,0,1.5,3"/>
                    <Path StrokeThickness="1" Stroke="Gray" Data="M1.5,3 A6,3,0,0,0,13.5,3" />
                    <Path StrokeThickness="0.5" Stroke="#FFA0A0A0" Data="M1.5,7 A6,3,0,0,0,13.5,7" />
                    <Path StrokeThickness="1" Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" Data="M21.5,0.5 l8,0  a2,2 0 0 0 2,2 l0,9 a2,2 0 0 0 -2,2 l-8,0 a2,2 0 0 0 -2,-2 l0,-9 a2,2 0 0 0 2,-2 z"/>
                    <Path Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" Data="M21,6 l5,0 l0,-3 l4,4 l-4,4 l0,-3 l-5,0 z"/>
                </Canvas>
                <TextBlock Grid.Column="1" Text="{Binding Content, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" Padding="2"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ImageSchema">
            <Grid Margin="{Binding Padding, RelativeSource={RelativeSource AncestorType=TreeViewItem}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Canvas Grid.Column="0" Width="18" Height="16" HorizontalAlignment="Center">
                    <Rectangle Canvas.Left="6" Canvas.Top="2" Width="6" Height="6" Stroke="Black" Fill="LightGray"/>
                    <Rectangle Canvas.Left="2" Canvas.Top="9" Width="6" Height="6" Stroke="Black" Fill="LightGray"/>
                    <Rectangle Canvas.Left="10" Canvas.Top="9" Width="6" Height="6" Stroke="Black" Fill="LightGray"/>
                </Canvas>
                <TextBlock Grid.Column="1" Text="{Binding Content, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" Padding="2"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ImageHiddenSchema">
            <Grid Margin="{Binding Padding, RelativeSource={RelativeSource AncestorType=TreeViewItem}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Canvas Grid.Column="0" Width="18" Height="16" HorizontalAlignment="Center">
                    <Rectangle Canvas.Left="6" Canvas.Top="2" Width="6" Height="6" Stroke="Gray" Fill="Silver"/>
                    <Rectangle Canvas.Left="2" Canvas.Top="9" Width="6" Height="6" Stroke="Gray" Fill="Silver"/>
                    <Rectangle Canvas.Left="10" Canvas.Top="9" Width="6" Height="6" Stroke="Gray" Fill="Silver"/>
                </Canvas>
                <TextBlock Grid.Column="1" Text="{Binding Content, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" Padding="2"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ImageTables">
            <Grid Margin="{Binding Padding, RelativeSource={RelativeSource AncestorType=TreeViewItem}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Canvas Grid.Column="0" Width="18" Height="16" HorizontalAlignment="Center">
                    <Rectangle Canvas.Left="1" Canvas.Top="1" Width="13" Height="11" Stroke="Black" Fill="LightGray"/>
                    <Rectangle Canvas.Left="1" Canvas.Top="1" Width="13" Height="2" Stroke="Black" Fill="Black"/>
                    <Rectangle Canvas.Left="4" Canvas.Top="4" Width="13" Height="11" Stroke="Black" Fill="LightGray"/>
                    <Rectangle Canvas.Left="4" Canvas.Top="4" Width="13" Height="2" Stroke="Black" Fill="Black"/>
                </Canvas>
                <TextBlock Grid.Column="1" Text="{Binding Content, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" Padding="2"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ImageTable">
            <Grid Margin="{Binding Padding, RelativeSource={RelativeSource AncestorType=TreeViewItem}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Canvas Grid.Column="0" Width="18" Height="16" HorizontalAlignment="Center">
                    <Rectangle Canvas.Left="1" Canvas.Top="2" Width="15" Height="13" Stroke="Black" Fill="LightGray"/>
                    <Rectangle Canvas.Left="1" Canvas.Top="2" Width="15" Height="2" Stroke="Black" Fill="Black"/>
                </Canvas>
                <TextBlock Grid.Column="1" Text="{Binding Content, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" Padding="2"/>
            </Grid>
        </DataTemplate>
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
                            <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}" Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}"/>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemStyleDB" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1,1,4,2"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Column="1"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TabControlStyleSingleLine" TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <!--<DockPanel Background="{DynamicResource WindowBackground}">-->
                            <DockPanel>
                                <Border DockPanel.Dock="Right" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0">
                                    <StackPanel Orientation="Horizontal">
                                        <Button x:Name="buttonScrollLeft" ContentTemplate="{StaticResource ImageLeftArrow8}" VerticalContentAlignment="Center" BorderThickness="0" Background="Transparent" Click="buttonScrollLeft_Click" Height="26" VerticalAlignment="Top"/>
                                        <Button x:Name="buttonScrollRight" ContentTemplate="{StaticResource ImageRightArrow8}"  VerticalContentAlignment="Center" BorderThickness="0" Background="Transparent" Click="buttonScrollRight_Click"/>
                                        <Button x:Name="buttonScrollSearchTabItem" ContentTemplate="{StaticResource ImageDropDown10}" VerticalContentAlignment="Bottom" BorderThickness="0" Background="Transparent" Click="buttonScrollSearchTabItem_Click" Padding="2"/>
                                    </StackPanel>
                                </Border>
                                <ScrollViewer x:Name="tabPanelScrollViewer" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" MouseMove="tabPanelScrollViewer_MouseMove" PreviewMouseDown="tabPanelScrollViewer_PreviewMouseDown" MouseUp="tabPanelScrollViewer_PreviewMouseUp" AllowDrop="True" VerticalAlignment="Bottom">
                                    <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                                </ScrollViewer>
                            </DockPanel>
                            <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemStyleGrayed" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="Menu.Static.Background" Color="#FFF0F0F0"/>
        <Style TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="{DynamicResource WindowBackground}"/>
            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
            <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
            <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
            <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="MenuItemControlTemplate" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource WindowBackground}" SnapsToDevicePixels="True">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
                        <Border x:Name="SubMenuBorder" BorderBrush="#FF999999" BorderThickness="1" Background="#FFF0F0F0" Padding="2">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <Rectangle Fill="#FFD7D7D7" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>
                </Trigger>
                <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <Grid x:Name="gridMain" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
        <DockPanel>
            <Menu DockPanel.Dock="Top" Background="{DynamicResource WindowBackground}">
                <MenuItem Header="データベース(_D)">
                    <MenuItem x:Name="MenuItemOpenDb" Header="データベースを開く(_O)">
                        <MenuItem Header="Postgres(NpgSql)"/>
                    </MenuItem>
                    <MenuItem x:Name="menuItemEditConnections" Header="接続リストの整理(_M)" Click="menuItemEditConnections_Click"/>
                    <MenuItem x:Name="buttonQuit" Header="終了(_X)" Click="buttonQuit_Click"/>
                </MenuItem>
                <MenuItem Header="編集(_E)">
                    <MenuItem Header="元に戻す(_U)" InputGestureText="Ctrl+Z" />
                    <Separator/>
                    <MenuItem Header="切り取り(_T)" InputGestureText="Ctrl+X" Command="ApplicationCommands.Cut"/>
                    <MenuItem Header="コピー(_C)" InputGestureText="Ctrl+C" Command="ApplicationCommands.Copy"/>
                    <MenuItem Header="表をコピー(_V)">
                        <MenuItem Header="タイトル+データ(_T)" InputGestureText="Ctrl+Shift+T" Command="local:DataGridCommands.CopyTable"/>
                        <MenuItem Header="データのみ(_D)" InputGestureText="Ctrl+Shift+D" Command="local:DataGridCommands.CopyTableContent"/>
                        <MenuItem Header="_INSERT文形式" InputGestureText="Ctrl+Shift+I" Command="local:DataGridCommands.CopyTableAsInsert" Visibility="Collapsed"/>
                        <MenuItem Header="_COPY文形式" InputGestureText="Ctrl+Shift+I" Command="local:DataGridCommands.CopyTableAsCopy" Visibility="Collapsed"/>
                    </MenuItem>
                    <MenuItem Header="貼り付け(_P)" InputGestureText="Ctrl+V" Command="ApplicationCommands.Paste"/>
                    <MenuItem Header="削除(_D)" InputGestureText="Del" Command="ApplicationCommands.Delete"/>
                    <Separator/>
                    <MenuItem Header="すべて選択(_A)" InputGestureText="Ctrl+A" Command="ApplicationCommands.SelectAll"/>
                    <Separator/>
                    <MenuItem Header="SQLを正規化(_R)" Command="local:QueryCommands.NormalizeSQL"/>
                </MenuItem>
                <MenuItem Header="検索(_S)">
                    <MenuItem Header="検索(_F)..." InputGestureText="Ctrl+F" Command="ApplicationCommands.Find"/>
                    <MenuItem Header="次を検索(_N)" InputGestureText="F3" Command="local:SearchCommands.FindNext"/>
                    <MenuItem Header="前を検索(_P)" InputGestureText="Shift+F3" Command="local:SearchCommands.FindPrevious"/>
                </MenuItem>
                <MenuItem x:Name="menuItemTools" Header="ツール(_T)">
                    <MenuItem x:Name="menuItemAddQuery" Header="新規クエリ" Click="menuItemAddQuery_Click"/>
                    <MenuItem x:Name="menuItemQueryHistory" Header="クエリ履歴" Click="menuItemQueryHistory_Click"/>
                    <MenuItem x:Name="menuItemLogWindow" Header="SQL実行ログ" IsCheckable="True" IsChecked="False"/>
                    <MenuItem x:Name="menuItemExportSchema" Header="定義のエクスポート" Click="menuItemExportSchema_Click"/>
                    <MenuItem x:Name="menuItemPsql" Header="psqlを起動" Click="menuItemPsql_Click" Tag="psql.exe"/>
                    <MenuItem x:Name="menuItemPgdump" Header="pg__dumpを起動" Click="menuItemPgdump_Click" Tag="pg_dump.exe"/>
                    <Separator/>
                    <MenuItem x:Name="menuItemOption" Header="オプション(_O)" Click="menuItemOption_Click"/>
                </MenuItem>
            </Menu>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <DockPanel>
                    <StackPanel DockPanel.Dock="Top">
                        <!--<ComboBox x:Name="comboBoxConnection" HorizontalAlignment="Stretch" Margin="2,2,4,2" DisplayMemberPath="Name" SelectionChanged="comboBoxConnection_SelectionChanged" DropDownClosed="comboBoxConnection_DropDownClosed"/>-->
                        <Border Margin="0,0,6,2" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" Background="Transparent">
                            <DockPanel Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" >
                                <Button x:Name="buttonFilterKind" Width="16" Height="16" DockPanel.Dock="Right" Background="Transparent" BorderBrush="Transparent" Click="buttonFilterKind_Click">
                                    <Button.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem x:Name="menuItemFilterByObjectName" Header="名前で絞り込み" IsCheckable="True" IsChecked="True"/>
                                            <MenuItem x:Name="menuItemFilterByColumnName" Header="列名で絞り込み" IsCheckable="True"/>
                                        </ContextMenu>
                                    </Button.ContextMenu>
                                    <Canvas HorizontalAlignment="Center" VerticalAlignment="Center" Width="16" Height="16">
                                        <Ellipse Canvas.Left="3" Canvas.Top="1" Width="10" Height="10" StrokeThickness="2" Stroke="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        <Line X1="6" Y1="9" X2="1" Y2="14" StrokeThickness="2" Stroke="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        <Path Fill="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Data="M10,12 L14,12 L12,16 z"/>
                                    </Canvas>
                                </Button>
                                <TextBox x:Name="textBoxFilter" HorizontalAlignment="Stretch" BorderThickness="0" TextChanged="textBoxFilter_TextChanged" KeyDown="textBoxFilter_KeyDown" LostFocus="textBoxFilter_LostFocus" />
                            </DockPanel>
                        </Border>
                    </StackPanel>
                    <TreeView x:Name="treeViewDB" Margin="0,0,6,0" SnapsToDevicePixels="True">
                        <TreeView.ContextMenu>
                            <ContextMenu>
                                <MenuItem x:Name="menuItemRefreshSchema" Header="更新" Click="menuItemRefreshSchema_Click"/>
                            </ContextMenu>
                        </TreeView.ContextMenu>
                        <TreeViewItem x:Name="treeViewItemTop"  Header="データベース" HeaderTemplate="{DynamicResource ImageServer}" IsExpanded="True">
                            <TreeViewItem.Items>
                                <TreeViewItem x:Name="TreeViewItemDB"  Header="データベース" HeaderTemplate="{DynamicResource ImageTable}" MouseDoubleClick="TreeViewItem_MouseDoubleClick"/>
                            </TreeViewItem.Items>
                        </TreeViewItem>
                    </TreeView>
                </DockPanel>
                <GridSplitter Grid.Column="0" Grid.RowSpan="2" Width="6" Background="Transparent"/>
                <Grid Grid.Column="1" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TabControl x:Name="tabControlMain" Background="Transparent" Style="{DynamicResource TabControlStyleSingleLine}" SelectionChanged="tabControlMain_SelectionChanged" LayoutUpdated="tabControlMain_LayoutUpdated">
                        <local:MovableTabItem Style="{DynamicResource MovableTabItemStyle}">
                            <local:MovableTabItem.Header>
                                <TextBlock Text="クエリ"/>
                            </local:MovableTabItem.Header>
                            <local:QueryControl CurrentDataSet="{Binding CurrentDataSet, ElementName=window}" Margin="0,0,0,0"/>
                        </local:MovableTabItem>
                    </TabControl>
                    <GridSplitter Grid.Column="0" Grid.Row="0" Height="4" Cursor="SizeNS" ResizeDirection="Rows" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                              Visibility="{Binding Visibility, ElementName=listBoxLog}" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Margin="0,0,0,-4"/>
                    <ListBox x:Name="listBoxLog" Grid.Row="1" Margin="0,4,0,0" Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=menuItemLogWindow}" MinHeight="60" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem x:Name="menuItemClearLog" Header="ログを消去" Click="menuItemClearLog_Click"/>
                            </ContextMenu>
                        </ListBox.ContextMenu>
                    </ListBox>
                    <Canvas Grid.Row="1" Width="32" Height="16" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,-15,0,0" Visibility="Collapsed">
                        <Polygon Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}">
                            <Polygon.Points>
                                <Point X="0.5" Y="16"/>
                                <Point X="0.5" Y="0"/>
                                <Point X="16" Y="0"/>
                                <Point X="32" Y="16"/>
                            </Polygon.Points>
                        </Polygon>
                        <Polyline Stroke="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" StrokeThickness="1">
                            <Polyline.Points>
                                <Point X="0.5" Y="16"/>
                                <Point X="0.5" Y="0"/>
                                <Point X="16" Y="0"/>
                                <Point X="32" Y="16"/>
                            </Polyline.Points>
                        </Polyline>
                    </Canvas>
                    <Canvas Grid.Row="1" Width="12" Height="12" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="3,-13,0,0" Visibility="Collapsed">
                        <Rectangle Canvas.Left="0" Canvas.Top="0" Width="12" Height="12"  StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        <Line X1="3" Y1="3" X2="9" Y2="9" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        <Line X1="9" Y1="3" X2="3" Y2="9" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                    </Canvas>
                </Grid>
            </Grid>
        </DockPanel>
        <Grid x:Name="gridLoading" Background="#7FFFFFFF" Visibility="Collapsed">
            <TextBlock Text="データベースの情報を読み込んでいます..." HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>
        </Grid>
    </Grid>
</Window>
