<UserControl x:Name="userControl" x:Class="Db2Source.QueryControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:Db2Source"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="488" Initialized="UserControl_Initialized" Unloaded="UserControl_Unloaded">
    <UserControl.Resources>
        <sys:String x:Key="tabItemHeader">クエリ</sys:String>
        <sys:String x:Key="messageInvalidParameter">パラメータ{0}の値が不正です</sys:String>
        <sys:String x:Key="messageRowsAffected">{0}行反映しました</sys:String>
        <sys:String x:Key="messageExecuted">実行しました (クエリ {0}  所要時間 {1})</sys:String>
        <sys:String x:Key="messageQueryAborted">中断しました</sys:String>
        <sys:String x:Key="messageRowsFound">{0}件見つかりました (クエリ {1}  所要時間 {2})</sys:String>
        <sys:String x:Key="messageNotConnected">データベースに接続していません。</sys:String>
        <sys:String x:Key="messageNoSql">データベースに接続していません。</sys:String>
        <ContextMenu x:Key="ContextMenuCopyTable" Placement="Bottom">
            <MenuItem Header="タイトル+データ(_T)" Command="local:DataGridCommands.CopyTable" CommandTarget="{Binding dataGridResult, ElementName=userControl, Mode=OneWay}"/>
            <MenuItem Header="データのみ(_D)" Command="local:DataGridCommands.CopyTableContent" CommandTarget="{Binding dataGridResult, ElementName=userControl, Mode=OneWay}"/>
        </ContextMenu>
        <SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}" Color="#FF000000"/>
        <ContextMenu x:Key="ContextMenuParameter" Placement="Bottom">
            <MenuItem Header="Nullを設定" Click="MenuItemParameterSetNull"/>
        </ContextMenu>
    </UserControl.Resources>
    <Grid x:Name="gridVertical">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="10*"/>
        </Grid.RowDefinitions>
        <DockPanel Margin="0,0,0,4">
            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" VerticalAlignment="Top">
                <Button x:Name="buttonFetch" Padding="4,2" HorizontalContentAlignment="Center" ContentTemplate="{StaticResource ImageExec20}" Click="buttonFetch_Click" HorizontalAlignment="Left" TabIndex="1" VerticalAlignment="Top" MinWidth="40" MaxHeight="50" Margin="2,0"/>
            </StackPanel>
            <ListBox x:Name="listBoxErrors" DockPanel.Dock="Bottom" Visibility="Collapsed"/>
            <Grid x:Name="gridSql">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid>
                    <TextBox x:Name="textBoxSql" VerticalScrollBarVisibility="Visible" TabIndex="0" AcceptsReturn="True" ToolTip="(SQLを入力してください)" HorizontalScrollBarVisibility="Auto" IsEnabled="{Binding IsQueryEditable, ElementName=userControl}"
                             FontFamily="{Binding FontFamily, Source={StaticResource CodeFont}}" FontSize="{Binding FontSize, Source={StaticResource CodeFont}}" FontStretch="{Binding FontStretch, Source={StaticResource CodeFont}}" FontStyle="{Binding FontStyle, Source={StaticResource CodeFont}}" FontWeight="{Binding FontWeight, Source={StaticResource CodeFont}}"/>
                    <local:SearchTextBoxControl x:Name="searchTextBoxSql" HorizontalAlignment="Right" VerticalAlignment="Top" Target="{Binding ElementName=textBoxSql}" FontFamily="Yu Gothic UI"/>
                </Grid>
                <GridSplitter x:Name="splitterParameters" Grid.Column="1" Width="4" HorizontalAlignment="Left"/>
                <DataGrid x:Name="dataGridParameters" SelectionUnit="Cell" CanUserSortColumns="False" AutoGenerateColumns="False" CanUserResizeRows="False" DockPanel.Dock="Right" IsEnabled="{Binding IsQueryEditable, ElementName=userControl}" Grid.Column="1" Margin="4,0,0,0">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="名前" IsReadOnly="True" Binding="{Binding ParameterName}" />
                        <DataGridComboBoxColumn x:Name="dataGridColumnDbType" Header="型" SelectedValueBinding="{Binding DbType}" DisplayMemberPath="Name" SelectedValuePath="DbType" />
                        <DataGridTextColumn Header="値" Binding="{Binding Text}" MinWidth="64">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock x:Name="nullText" Text="&lt;null&gt;" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" HorizontalAlignment="Stretch" TextAlignment="{Binding (local:DataGridController.CellInfo).TextAlignment, RelativeSource={RelativeSource AncestorType=DataGridCell}}" Visibility="Collapsed"/>
                                                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        <Button Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Stretch" VerticalContentAlignment="Bottom" Style="{StaticResource ButtonStyleRef}" Click="DataGridCellParamValueStyleButton_Click" Focusable="False"/>
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsNull}" Value="true"/>
                                                            <Condition Binding="{Binding IsEditing, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Visibility" Value="Visible" TargetName="nullText"/>
                                                    </MultiDataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsEditing" Value="True">
                                            <Setter Property="Background" Value="Transparent"/>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding IsError}" Value="True">
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </DockPanel>
        <GridSplitter HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="4" Grid.ColumnSpan="2" IsTabStop="False"/>
        <TabControl x:Name="tabControlResult" Grid.Row="1" TabIndex="2">
            <TabItem x:Name="tabItemLog" Header="状況" TabIndex="3">
                <DockPanel>
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                        <ToolBarTray>
                            <ToolBar>
                                <Button x:Name="buttonClearLog" Margin="1" Padding="2,0" ContentTemplate="{StaticResource ImageTrash14}" ToolTip="ログを消去" Click="menuItemClearLog_Click"/>
                                <Button x:Name="buttonHistory" Margin="1" Padding="2,0" ContentTemplate="{StaticResource ImageHistory14}" ToolTip="履歴" Click="buttonHistory_Click"/>
                            </ToolBar>
                        </ToolBarTray>
                    </StackPanel>
                    <ListBox x:Name="listBoxLog" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TabIndex="4" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Visible" SelectionMode="Extended" HorizontalContentAlignment="Stretch" MinHeight="20">
                        <ListBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem x:Name="menuItemClearLog" Header="ログを消去" Click="menuItemClearLog_Click"/>
                            </ContextMenu>
                        </ListBox.ContextMenu>
                    </ListBox>
                </DockPanel>
            </TabItem>
            <TabItem x:Name="tabItemDataGrid" Header="結果" TabIndex="5">
                <DockPanel MinHeight="20">
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                        <ToolBarTray>
                            <ToolBar>
                                <Button x:Name="buttonCopyAll" Margin="1" Padding="2,0" ContentTemplate="{StaticResource ImageCopy14}" ToolTip="表をコピー" TabIndex="10" Click="buttonCopyAll_Click"/>
                                <Button x:Name="buttonSearchWord" Margin="4,2,2,2" Padding="2" ContentTemplate="{StaticResource ImageSearch14}" ToolTip="検索" Click="buttonSearchWord_Click" Visibility="Collapsed"/>
                            </ToolBar>
                        </ToolBarTray>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom">
                        <TextBlock x:Name="textBlockGridResult"/>
                    </StackPanel>
                    <DataGrid x:Name="dataGridResult" AutoGenerateColumns="False" TabIndex="6" IsTabStop="True" Style="{DynamicResource DataGridStyleResult}" VerticalScrollBarVisibility="Visible" SelectionUnit="Cell">
                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Setter Property="local:DataGridController.CellInfo" Value="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource DataGridCellToCellInfoConverter}, Mode=OneWay}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                <Grid>
                                                    <TextBlock x:Name="nullText" Text="&lt;null&gt;" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" HorizontalAlignment="Stretch" TextAlignment="{Binding (local:DataGridController.CellInfo).TextAlignment, RelativeSource={RelativeSource AncestorType=DataGridCell}}" Visibility="Collapsed"/>
                                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding (local:DataGridController.CellInfo).IsNull, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                        <Condition Binding="{Binding IsEditing, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Visibility" Value="Visible" TargetName="nullText"/>
                                                </MultiDataTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                        <Condition Property="IsEditing" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" TargetName="nullText"/>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="true"/>
                                                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" TargetName="nullText"/>
                                                </MultiTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding (local:DataGridController.CellInfo).IsCurrentRow, RelativeSource={RelativeSource Self}}" Value="true">
                                        <Setter Property="Background" Value="{StaticResource DataGrid.SelectedRow.Background}"/>
                                    </DataTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True"/>
                                            <Condition Property="IsEditing" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true"/>
                                            <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <!--<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>-->
                                        <Setter Property="Background" Value="{DynamicResource DataGrid.SelectedInactive.Background}"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>
                    </DataGrid>
                </DockPanel>
            </TabItem>
            <TabItem x:Name="tabItemCrossGrid" Header="クロス集計" TabIndex="6" Visibility="Collapsed">
                <DockPanel>
                    <Grid DockPanel.Dock="Right">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>
                        <ListBox Grid.Row="0"/>
                        <ListBox Grid.Row="1"/>
                        <ListBox Grid.Row="2"/>
                    </Grid>
                    <local:CrossGrid/>
                </DockPanel>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
