<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Db2Source"
             xmlns:local2="clr-namespace:Db2Source;assembly=Db2SrcDataSet"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Name="userControl" x:Class="Db2Source.TableControl"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="627.692" Initialized="UserControl_Initialized">
    <UserControl.Resources>
        <local:InvertBooleanConverter x:Key="InvertBooleanConverter"/>
        <local:IsEnabledToColorConverter x:Key="IsEnabledToColorConverter"/>
        <local:PgsqlColumnArrayToTextConverter x:Key="PgsqlColumnArrayToTextConverter"/>
        <local:ForeignKeyRuleConverter x:Key="ForeignKeyRuleConverter"/>
        <local:RefButtonVisibilityConverter x:Key="RefButtonVisibilityConverter"/>
        <local:JoinKindToVisibilityConverter x:Key="JoinKindToVisibilityConverter"/>
        <local:JoinTableCandidatesCountToEnabledConverter x:Key="JoinTableCandidatesCountToEnabledConverter"/>
        <SolidColorBrush x:Key="ModifiedBackgroundBrush" Color="#FFFFFFC0"/>
        <SolidColorBrush x:Key="NotNullErrorBackgroundBrush" Color="#FFFFC0C0"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <DataTemplate x:Key="ImageJoinTableClose">
            <Canvas Width="8" Height="8">
                <Path StrokeThickness="1" Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}" Data="M1,1 L7,7 M7,1 L1,7"/>
            </Canvas>
        </DataTemplate>
        <DataTemplate x:Key="ImageJoinTableAdd">
            <Canvas Width="10" Height="10">
                <Path StrokeThickness="1" Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}" Data="M1,4.5 L8,4.5 M4.5,1 L4.5,8"/>
            </Canvas>
        </DataTemplate>
        <ContextMenu x:Key="ContextMenuJoinTableCandidates" ItemsSource="{Binding ReferTo, Mode=OneWay}" Placement="Bottom">
            <ContextMenu.ItemContainerStyle>
                <Style TargetType="MenuItem">
                    <Setter Property="Header" Value="{Binding}"/>
                    <EventSetter Event="Click" Handler="MenuItemAddJoin_Click"/>
                </Style>
            </ContextMenu.ItemContainerStyle>
        </ContextMenu>
        <ContextMenu x:Key="ContextMenuCopyTable" Placement="Bottom">
            <MenuItem Header="タイトル+データ(_T)" Command="local:DataGridCommands.CopyTable" CommandTarget="{Binding dataGridResult, ElementName=userControl, Mode=OneWay}"/>
            <MenuItem Header="データのみ(_D)" Command="local:DataGridCommands.CopyTableContent" CommandTarget="{Binding dataGridResult, ElementName=userControl, Mode=OneWay}"/>
            <MenuItem Header="_Insert文形式" Command="local:DataGridCommands.CopyTableAsInsert" CommandTarget="{Binding dataGridResult, ElementName=userControl, Mode=OneWay}"/>
        </ContextMenu>
        <!--<ContextMenu x:Key="ContextMenuPasteTable" Placement="Bottom">
            <MenuItem Header="セルに貼り付け" Command="ApplicationCommands.Paste" CommandTarget="{Binding dataGridResult, ElementName=userControl, Mode=OneWay}"/>
            <MenuItem Header="列名で照合してマージ" CommandTarget="{Binding dataGridResult, ElementName=userControl, Mode=OneWay}"/>
            <MenuItem Header="表に貼り付け" CommandTarget="{Binding dataGridResult, ElementName=userControl, Mode=OneWay}"/>
        </ContextMenu>-->
        <DataTemplate x:Key="JoinTableControl">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.RowSpan="2" Text="{Binding Content.Table.Name, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" VerticalAlignment="Center" MinWidth="32" Margin="2,2,0,2"/>
                        <Button Grid.Column="1" Grid.RowSpan="2" Background="Transparent" BorderThickness="0" ContentTemplate="{StaticResource ImageDropDown8}" VerticalAlignment="Bottom" Margin="2,0,0,0" Padding="2" Focusable="False" Click="ButtonJoinTableColumns_Click"/>
                        <TextBlock Grid.Column="2" Grid.RowSpan="2" Text="as" VerticalAlignment="Center" Margin="4,0"/>
                        <TextBox Grid.Column="3" Grid.RowSpan="2" Text="{Binding Content.Alias, RelativeSource={RelativeSource AncestorType=ContentPresenter}, Mode=TwoWay}" VerticalAlignment="Center" MinWidth="16" Margin="0,2,2,2" LostFocus="TextBoxAlias_LostFocus" KeyDown="TextBoxAlias_KeyDown"/>
                        <Button Grid.Column="4" VerticalAlignment="Top" HorizontalAlignment="Right" Background="Transparent" BorderThickness="0" ContentTemplate="{StaticResource ImageJoinTableClose}" Click="buttonCloseJoin_Click"
                                Visibility="{Binding Content.Kind, RelativeSource={RelativeSource AncestorType=ContentPresenter}, Converter={StaticResource JoinKindToVisibilityConverter}}" Focusable="False"/>
                        <Button Grid.Column="4" Grid.Row="1" ContentTemplate="{StaticResource ImageJoinTableAdd}" Click="buttonAddJoin_Click"
                                DataContext="{Binding Content, RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                                VerticalAlignment="Bottom" Background="Transparent" BorderThickness="0" Width="10" Height="10" Margin="2" Focusable="False" IsEnabled="{Binding SelectableForeignKeys, Converter={StaticResource JoinTableCandidatesCountToEnabledConverter}}"/>
                    </Grid>
                </Border>
            </Grid>
        </DataTemplate>
        <ItemsPanelTemplate x:Key="ItemsPanelTemplateJoinTable">
            <WrapPanel IsItemsHost="True"/>
        </ItemsPanelTemplate>
        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
        <Style x:Key="ListBoxItemStyleJoinTable" TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="2,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListBoxStyleJoinTables" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>-->
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <x:Array x:Key="DefaultHiddenLevelDisplayItems" Type="local2:HiddenLevelDisplayItem">
            <local2:HiddenLevelDisplayItem Level="Visible" Name="表示しない" />
            <local2:HiddenLevelDisplayItem Level="Hidden" Name="OIDを表示" />
            <local2:HiddenLevelDisplayItem Level="SystemInternal" Name="すべて表示" />
        </x:Array>
    </UserControl.Resources>
    <TabControl x:Name="tabControlMain">
        <TabItem x:Name="tabItemData" Header="データ">
            <Grid>
                <Grid.InputBindings>
                    <KeyBinding Command="local:DataGridCommands.CopyTable" Gesture="Ctrl+T"/>
                </Grid.InputBindings>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="10*"/>
                </Grid.RowDefinitions>
                <DockPanel Margin="0,0,0,4">
                    <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" Margin="2">
                        <CheckBox x:Name="checkBoxLimitRow" VerticalAlignment="Center" IsChecked="True" TabIndex="3"/>
                        <TextBlock Text="先頭の"  VerticalAlignment="Center" Foreground="{Binding IsChecked, Converter={StaticResource IsEnabledToColorConverter}, ElementName=checkBoxLimitRow}"/>
                        <TextBox x:Name="textBoxLimitRow" Text="100" Width="48"  VerticalAlignment="Center" TextAlignment="Right" IsEnabled="{Binding IsChecked, ElementName=checkBoxLimitRow}" PreviewTextInput="textBoxLimitRow_PreviewTextInput" TabIndex="4"/>
                        <TextBlock Text="件のみ"  VerticalAlignment="Center" Foreground="{Binding IsChecked, Converter={StaticResource IsEnabledToColorConverter}, ElementName=checkBoxLimitRow}"/>
                        <TextBlock x:Name="textBlockWarningLimit" Text="件数上限に達しています"  VerticalAlignment="Center" Margin="2,0" Foreground="Red" Visibility="Collapsed"/>
                    </StackPanel>
                    <StackPanel DockPanel.Dock="Right" Margin="2,0" MinHeight="80">
                        <Button x:Name="buttonFetch" Padding="4,2" ContentTemplate="{StaticResource ImageSearch20}" HorizontalContentAlignment="Center" Click="buttonFetch_Click" HorizontalAlignment="Left" VerticalAlignment="Top" MinWidth="40" MinHeight="50" TabIndex="1"/>
                    </StackPanel>
                    <DockPanel DockPanel.Dock="Bottom">
                        <TextBlock DockPanel.Dock="Left" Text="並び順：" VerticalAlignment="Center"/>
                        <!--<StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
                            <TextBlock Text="システム項目：" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="6,0,0,0"/>
                            <ComboBox x:Name="comboBoxSystemColumn" Grid.Column="1" VerticalAlignment="Center" Margin="0,1" DisplayMemberPath="Name" SelectedValuePath="Level" SelectedValue="{Binding VisibleLevel, ElementName=userControl}" MinWidth="85" ItemsSource="{StaticResource DefaultHiddenLevelDisplayItems}"/>
                        </StackPanel>-->
                        <local:SortFieldListControl x:Name="sortFields" VerticalContentAlignment="Top" Margin="0,2" Target="{Binding Target, ElementName=userControl}" Height="Auto" TabIndex="2"/>
                    </DockPanel>
                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <TextBox x:Name="textBoxCondition" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" VerticalScrollBarVisibility="Visible" AcceptsReturn="True" ToolTip="(検索条件を入力してください)" TabIndex="0" IsInactiveSelectionHighlightEnabled="True"/>
                        <local:SearchTextBoxControl x:Name="searchTextBoxCondition" HorizontalAlignment="Right" VerticalAlignment="Top" Target="{Binding ElementName=textBoxCondition}" FontFamily="Yu Gothic UI"/>
                    </Grid>
                </DockPanel>
                <GridSplitter HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="4" Grid.ColumnSpan="2" IsTabStop="False" TabIndex="5" Background="Transparent"/>
                <DockPanel Grid.Row="1">
                    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                        <ToolBarTray>
                            <ToolBar>
                                <Button x:Name="buttonAdd" Margin="1" Padding="2" Focusable="False" ContentTemplate="{StaticResource ImageAdd14}" VerticalAlignment="Stretch" ToolTip="追加" Click="buttonAdd_Click" TabIndex="6" IsEnabled="{Binding IsReadOnly, Converter={StaticResource InvertBooleanConverter}, ElementName=dataGridResult}"/>
                                <Button x:Name="buttonApply" Margin="1" Padding="2" Focusable="False" ContentTemplate="{StaticResource ImageApply14}" VerticalAlignment="Stretch" ToolTip="変更を保存" Click="ButtonApply_Click" IsEnabled="{Binding DataGridControllerResult.IsModified, ElementName=userControl}" TabIndex="8"/>
                                <Button x:Name="buttonRevert" Margin="1" Padding="2" Focusable="False" ContentTemplate="{StaticResource ImageRollback14}" VerticalAlignment="Stretch" ToolTip="変更を元に戻す" Click="ButtonRevert_Click" IsEnabled="{Binding DataGridControllerResult.IsModified, ElementName=userControl}" TabIndex="9"/>
                                <Separator/>
                                <Button x:Name="buttonFilterColumns" Margin="1" Padding="2,0" Focusable="False" ContentTemplate="{StaticResource ImageFilter14}" VerticalAlignment="Stretch" ToolTip="項目フィルター" TabIndex="10" Click="buttonFilterColumns_Click"/>
                                <Button x:Name="buttonCopyAll" Margin="1" Padding="2,0" Focusable="False" ContentTemplate="{StaticResource ImageCopy14}" VerticalAlignment="Stretch" ToolTip="表をコピー" TabIndex="10" Click="buttonCopyAll_Click"/>
                                <Button x:Name="buttonPasteTable" Margin="1" Padding="2,0" Focusable="False" ContentTemplate="{StaticResource ImagePaste14}" VerticalAlignment="Stretch" ToolTip="貼り付け" TabIndex="10" Command="ApplicationCommands.Paste" CommandTarget="{Binding ElementName=dataGridResult}"/>
                                <Button x:Name="buttonSearchWord" Margin="1" Padding="2" Focusable="False" ContentTemplate="{StaticResource ImageSearch14}" VerticalAlignment="Stretch" ToolTip="検索" Click="buttonSearchWord_Click"/>
                                <Button x:Name="buttonSetNull" Margin="1" Padding="2,0" Focusable="False" Content="&lt;null&gt;" FontFamily="Yu Gothic UI" FontSize="10" VerticalAlignment="Stretch" ToolTip="nullを設定する" Click="buttonSetNull_Click"/>
                                <Separator/>
                                <TextBlock Text="システム項目：" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="6,0,0,0"/>
                                <ComboBox x:Name="comboBoxSystemColumn" VerticalAlignment="Center" Margin="0,1" DisplayMemberPath="Name" SelectedValuePath="Level" SelectedValue="{Binding VisibleLevel, ElementName=userControl}" MinWidth="85" ItemsSource="{StaticResource DefaultHiddenLevelDisplayItems}"/>
                            </ToolBar>
                        </ToolBarTray>
                    </StackPanel>
                    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" HorizontalAlignment="Right">

                    </StackPanel>
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom">
                        <TextBlock x:Name="textBlockGridResult"/>
                    </StackPanel>
                    <DataGrid x:Name="dataGridResult" Grid.Row="1" Grid.ColumnSpan="2" AutoGenerateColumns="False" AddingNewItem="dataGridResult_AddingNewItem" InitializingNewItem="dataGridResult_InitializingNewItem" TabIndex="10" SelectionUnit="Cell" Style="{DynamicResource DataGridStyleResult}" VerticalScrollBarVisibility="Visible"
                              PreviewKeyDown="dataGridResult_PreviewKeyDown" BeginningEdit="dataGridResult_BeginningEdit" RowEditEnding="dataGridResult_RowEditEnding">
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="ToolTip" Value="{Binding Comment}"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Setter Property="local:DataGridController.CellInfo" Value="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource DataGridCellToCellInfoConverter}, Mode=OneWay}"/>
                                <EventSetter Event="Selected" Handler="DataGridCell_Selected"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock x:Name="nullText" Text="&lt;null&gt;" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" HorizontalAlignment="Stretch" TextAlignment="{Binding (local:DataGridController.CellInfo).TextAlignment, RelativeSource={RelativeSource AncestorType=DataGridCell}}" Visibility="Collapsed"/>
                                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    <Button Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Stretch" VerticalContentAlignment="Bottom" Style="{StaticResource ButtonStyleRef}" Click="DataGridCellRefColumnStyleButton_Click" Visibility="{Binding (local:DataGridController.CellInfo).RefButtonVisibility, RelativeSource={RelativeSource AncestorType=DataGridCell}}" Focusable="False"/>
                                                    <Border x:Name="strikeout" Grid.ColumnSpan="2" VerticalAlignment="Center" Height="1" BorderThickness="0,1,0,0" BorderBrush="{TemplateBinding Foreground}" Visibility="Collapsed" Grid.ZIndex="1"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <DataTrigger Binding="{Binding IsDeleted}" Value="true">
                                                    <Setter Property="Visibility" Value="Visible" TargetName="strikeout"/>
                                                </DataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding (local:DataGridController.CellInfo).IsNull, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                        <Condition Binding="{Binding IsEditing, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Visibility" Value="Visible" TargetName="nullText"/>
                                                </MultiDataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding (local:DataGridController.CellInfo).IsCurrentRow, RelativeSource={RelativeSource Self}}" Value="true">
                                        <Setter Property="Background" Value="{StaticResource DataGrid.SelectedRow.Background}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding (local:DataGridController.CellInfo).IsModified, RelativeSource={RelativeSource Self}}" Value="true">
                                        <Setter Property="Background" Value="{StaticResource ModifiedBackgroundBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding (local:DataGridController.CellInfo).IsFault, RelativeSource={RelativeSource Self}}" Value="true">
                                        <Setter Property="Background" Value="{StaticResource NotNullErrorBackgroundBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsDeleted}" Value="true">
                                        <Setter Property="Foreground" Value="{StaticResource Button.Disabled.Foreground}"/>
                                        <Setter Property="Background" Value="{StaticResource Button.Disabled.Background}"/>
                                    </DataTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True"/>
                                            <Condition Property="IsEditing" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true"/>
                                            <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <!--<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>-->
                                        <Setter Property="Background" Value="{DynamicResource DataGrid.SelectedInactive.Background}"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>
                    </DataGrid>
                </DockPanel>
            </Grid>
        </TabItem>
        <TabItem x:Name="tabItemInfo" Header="情報">
            <local:TableInfoControl Target="{Binding Target, ElementName=userControl}"/>
        </TabItem>
        <TabItem Header="トリガー">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <ListBox x:Name="listBoxTrigger" MinWidth="200" DisplayMemberPath="Name" ItemsSource="{Binding Target.Triggers, ElementName=userControl}" LayoutUpdated="dataGridTrigger_LayoutUpdated"/>
                <!--<DataGrid x:Name="dataGridTrigger" MinWidth="200" ItemsSource="{Binding Target.Triggers, ElementName=userControl}" SelectedItem="{Binding SelectedTrigger, ElementName=userControl}" AutoGenerateColumns="False" LayoutUpdated="dataGridTrigger_LayoutUpdated">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="名称" Binding="{Binding Name}"/>
                    </DataGrid.Columns>
                </DataGrid>-->
                <GridSplitter Margin="0,0,-4,0" Width="4" />
                <local:TriggerControl Grid.Column="1" Margin="6,2,2,2" Target="{Binding SelectedItem, ElementName=listBoxTrigger}"/>
            </Grid>
        </TabItem>
        <TabItem Header="依存関係">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <DockPanel Margin="0,0,0,4">
                    <TextBlock DockPanel.Dock="Top" Padding="2"><Run Text="この表から参照"/></TextBlock>
                    <DataGrid x:Name="dataGridReferTo" IsReadOnly="True" ItemsSource="{Binding Target.ReferTo, ElementName=userControl}" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <!--<DataGridTextColumn Header="No" IsReadOnly="True"/>-->
                            <DataGridTextColumn Header="制約名" Binding="{Binding Name}"/>
                            <DataGridTextColumn Header="列" Binding="{Binding Columns, Converter={StaticResource PgsqlColumnArrayToTextConverter}}"/>
                            <DataGridTextColumn Header="参照先" Binding="{Binding ReferenceConstraint.Table.FullName}"/>
                            <DataGridTextColumn Header="ON UPDATE" Binding="{Binding UpdateRule, Converter={StaticResource ForeignKeyRuleConverter}}" />
                            <DataGridTextColumn Header="ON DELETE" Binding="{Binding DeleteRule, Converter={StaticResource ForeignKeyRuleConverter}}" />
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
                <GridSplitter Height="4" ResizeDirection="Rows" Cursor="SizeNS" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"/>
                <DockPanel Grid.Row="1">
                    <TextBlock DockPanel.Dock="Top" Padding="2"><Run Text="この表を参照"/></TextBlock>
                    <DataGrid x:Name="dataGridReferedBy" IsReadOnly="True" ItemsSource="{Binding Target.ReferFrom, ElementName=userControl}" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <!--<DataGridTextColumn Header="No" IsReadOnly="True"/>-->
                            <DataGridTextColumn Header="参照元" Binding="{Binding Table.FullName}"/>
                            <DataGridTextColumn Header="制約名" Binding="{Binding Name}"/>
                            <DataGridTextColumn Header="列" Binding="{Binding Columns, Converter={StaticResource PgsqlColumnArrayToTextConverter}}"/>
                            <DataGridTextColumn Header="ON UPDATE" Binding="{Binding UpdateRule, Converter={StaticResource ForeignKeyRuleConverter}}" />
                            <DataGridTextColumn Header="ON DELETE" Binding="{Binding DeleteRule, Converter={StaticResource ForeignKeyRuleConverter}}" />
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </Grid>
        </TabItem>
        <TabItem Header="ソース">
            <DockPanel>
                <WrapPanel Orientation="Horizontal" DockPanel.Dock="Top">
                    <CheckBox x:Name="checkBoxSourceMain" Content="本体" IsChecked="True" Margin="2" Checked="checkBoxSource_Checked" Unchecked="checkBoxSource_Unchecked"/>
                    <CheckBox x:Name="checkBoxSourceKeyCons" Content="一意成約" IsChecked="True" Margin="2" Checked="checkBoxSource_Checked" Unchecked="checkBoxSource_Unchecked"/>
                    <CheckBox x:Name="checkBoxSourceRefCons" Content="参照制約" IsChecked="True" Margin="2" Checked="checkBoxSource_Checked" Unchecked="checkBoxSource_Unchecked"/>
                    <CheckBox x:Name="checkBoxSourceCons" Content="その他制約" IsChecked="True" Margin="2" Checked="checkBoxSource_Checked" Unchecked="checkBoxSource_Unchecked"/>
                    <CheckBox x:Name="checkBoxSourceComment" Content="コメント" IsChecked="True" Margin="2" Checked="checkBoxSource_Checked" Unchecked="checkBoxSource_Unchecked"/>
                    <CheckBox x:Name="checkBoxSourceTrigger" Content="トリガー" IsChecked="True" Margin="2" Checked="checkBoxSource_Checked" Unchecked="checkBoxSource_Unchecked"/>
                    <CheckBox x:Name="checkBoxSourceIndex" Content="インデックス" IsChecked="True" Margin="2" Checked="checkBoxSource_Checked" Unchecked="checkBoxSource_Unchecked"/>
                    <CheckBox x:Name="checkBoxSourceReferredCons" Content="この表への参照" IsChecked="False" Margin="2" Checked="checkBoxSource_Checked" Unchecked="checkBoxSource_Unchecked"/>
                    <CheckBox x:Name="checkBoxSourceDropReferredCons" Content="この表への参照を削除" IsChecked="False" Margin="2" Checked="checkBoxSource_Checked" Unchecked="checkBoxSource_Unchecked"/>
                </WrapPanel>
                <Grid>
                    <TextBox x:Name="textBoxSource" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Visible" IsReadOnly="True" IsReadOnlyCaretVisible="True" IsInactiveSelectionHighlightEnabled="True"/>
                    <local:SearchTextBoxControl x:Name="searchTextBoxSource" HorizontalAlignment="Right" VerticalAlignment="Top" Target="{Binding ElementName=textBoxSource}" FontFamily="Yu Gothic UI"/>
                </Grid>
            </DockPanel>
        </TabItem>
        <TabItem x:Name="tabItemTemplate" Header="SQLテンプレート">
            <TabControl>
                <TabItem x:Name="tabItemSelectSql" Header="SELECT">
                    <DockPanel>
                        <Border DockPanel.Dock="Top">
                            <DockPanel>
                                <ListBox x:Name="ListBoxJoinTables" ItemTemplate="{StaticResource JoinTableControl}" ItemsSource="{Binding JoinTables, ElementName=userControl}" ItemsPanel="{DynamicResource ItemsPanelTemplateJoinTable}" ItemContainerStyle="{DynamicResource ListBoxItemStyleJoinTable}" Style="{DynamicResource ListBoxStyleJoinTables}" KeyboardNavigation.TabNavigation="Local"/>
                            </DockPanel>
                        </Border>
                        <Grid>
                            <TextBox x:Name="textBoxSelectSql" VerticalAlignment="Stretch" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Auto" IsReadOnly="True"  IsReadOnlyCaretVisible="True" IsInactiveSelectionHighlightEnabled="True"/>
                            <local:SearchTextBoxControl x:Name="searchTextBoxSelectSql" HorizontalAlignment="Right" VerticalAlignment="Top" Target="{Binding ElementName=textBoxSelectSql}" FontFamily="Yu Gothic UI"/>
                        </Grid>
                    </DockPanel>
                </TabItem>
                <TabItem x:Name="tabItemInsertSql" Header="INSERT">
                    <Grid>
                        <TextBox x:Name="textBoxInsertSql" VerticalAlignment="Stretch" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Auto" IsReadOnly="True" IsReadOnlyCaretVisible="True" IsInactiveSelectionHighlightEnabled="True"/>
                        <local:SearchTextBoxControl x:Name="searchTextBoxInsertSql" HorizontalAlignment="Right" VerticalAlignment="Top" Target="{Binding ElementName=textBoxInsertSql}" FontFamily="Yu Gothic UI"/>
                    </Grid>
                </TabItem>
                <TabItem x:Name="tabItemUpdateSql" Header="UPDATE">
                    <Grid>
                        <TextBox x:Name="textBoxUpdateSql" VerticalAlignment="Stretch" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Auto" IsReadOnly="True" IsReadOnlyCaretVisible="True" IsInactiveSelectionHighlightEnabled="True"/>
                        <local:SearchTextBoxControl x:Name="searchTextBoxUpdateSql" HorizontalAlignment="Right" VerticalAlignment="Top" Target="{Binding ElementName=textBoxUpdateSql}" FontFamily="Yu Gothic UI"/>
                    </Grid>
                </TabItem>
                <TabItem x:Name="tabItemDeleteSql" Header="DELETE">
                    <Grid>
                        <TextBox x:Name="textBoxDeleteSql" VerticalAlignment="Stretch" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Auto" IsReadOnly="True" IsReadOnlyCaretVisible="True" IsInactiveSelectionHighlightEnabled="True"/>
                        <local:SearchTextBoxControl x:Name="searchTextBoxDeleteSql" HorizontalAlignment="Right" VerticalAlignment="Top" Target="{Binding ElementName=textBoxDeleteSql}" FontFamily="Yu Gothic UI"/>
                    </Grid>
                </TabItem>
            </TabControl>
        </TabItem>
    </TabControl>
</UserControl>
