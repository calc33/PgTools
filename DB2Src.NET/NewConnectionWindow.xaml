<Window x:Name="window" x:Class="Db2Source.NewConnectionWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:Db2Source"
        mc:Ignorable="d"
        FontFamily="{Binding FontFamily, Source={StaticResource BaseFont}}" FontSize="{Binding FontSize, Source={StaticResource BaseFont}}" FontStretch="{Binding FontStretch, Source={StaticResource BaseFont}}" FontStyle="{Binding FontStyle, Source={StaticResource BaseFont}}" FontWeight="{Binding FontWeight, Source={StaticResource BaseFont}}"
        Title="新規データベース接続" Height="Auto" d:DesignHeight="154.939" WindowStyle="ToolWindow" ScrollViewer.VerticalScrollBarVisibility="Disabled"
        WindowStartupLocation="CenterScreen" SizeToContent="WidthAndHeight" Background="White"
        HorizontalAlignment="Left" VerticalAlignment="Top" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
        Initialized="window_Initialized">
    <Window.Resources>
        <sys:String x:Key="checkBoxTextShowPassword">パスワードを表示</sys:String>
        <!--<local:TreeViewConnectionSelector x:Key="TreeViewConnectionSelector"/>-->
        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="ContentTemplate" Value="{StaticResource ImageLeftArrow8}"/>
                            </Trigger>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <StackPanel x:Name="StackPanelMain" Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Top">
            <Grid x:Name="GridProperties">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <DockPanel Grid.ColumnSpan="2" Margin="2,0,0,2">
                    <ToggleButton x:Name="buttonShowConnections" DockPanel.Dock="Right" MinWidth="16" ContentTemplate="{StaticResource ImageRightArrow8}" IsChecked="True" Click="buttonShowConnections_Click"/>
                    <Border BorderBrush="{StaticResource Button.Static.Border}" BorderThickness="1,1,0,1">
                        <TextBlock Text="{Binding Target, ElementName=window}" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    </Border>
                </DockPanel>
                <TextBlock Grid.Column="0" Grid.Row="1" Margin="2" VerticalAlignment="Center" HorizontalAlignment="Right" Text="種別"/>
                <TextBox Grid.Column="1" Grid.Row="1" Margin="2" IsReadOnly="True" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Text="{Binding Target.DatabaseType, ElementName=window, Mode=OneWay}" MinWidth="300"/>
                <TextBlock x:Name="textBlockTitleColor" Grid.Column="0" Grid.Row="2" Margin="2" VerticalAlignment="Center" HorizontalAlignment="Right" Text="タイトル色"/>
                <StackPanel x:Name="stackPanelTitleColor" Grid.Column="1" Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Left">
                    <Button x:Name="buttonTitleColor" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" BorderThickness="1" Width="40" VerticalAlignment="Stretch" Margin="2" Background="{Binding Target.BackgroundColor, Converter={StaticResource RGBToBrushConverter}, ElementName=window}" Click="buttonTitleColor_Click"/>
                    <CheckBox x:Name="checkBoxTitleColor" Content="既定値を使用" VerticalAlignment="Center" IsChecked="{Binding Target.UseDefaultBackgroundColor, ElementName=window}" Click="checkBoxTitleColor_Click"/>
                </StackPanel>
            </Grid>
            <local:EquallyStackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                <Button x:Name="buttonTest" Grid.Column="0" Margin="5" Padding="5" Click="buttonTest_Click" Content="接続テスト"/>
                <Button x:Name="buttonOK" Grid.Column="1" Margin="5" Padding="5" IsDefault="True" Click="buttonOK_Click" Content="OK"/>
                <Button x:Name="buttonCancel" Grid.Column="2" Margin="5" Padding="5" IsCancel="True" Click="buttonCancel_Click" Content="キャンセル"/>
            </local:EquallyStackPanel>
        </StackPanel>
        <DockPanel Grid.Column="1" Visibility="{Binding IsChecked, ElementName=buttonShowConnections, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Border DockPanel.Dock="Top" BorderBrush="{StaticResource TextBox.Static.Border}" BorderThickness="1">
                <DockPanel>
                    <Button DockPanel.Dock="Right" Background="Transparent" BorderThickness="0" ContentTemplate="{StaticResource ImageSearch12}"/>
                    <TextBox x:Name="textBoxFilterTreeView" BorderThickness="0" TextChanged="textBoxFilterTreeView_TextChanged" PreviewKeyDown="textBoxFilterTreeView_PreviewKeyDown"/>
                </DockPanel>
            </Border>
            <TreeView x:Name="treeViewConnections" MinWidth="200" MaxWidth="500" MouseDoubleClick="treeViewConnections_MouseDoubleClick" KeyDown="treeViewConnections_KeyDown" SelectedItemChanged="treeViewConnections_SelectedItemChanged"/>
        </DockPanel>
        <Grid x:Name="gridLoading" Grid.ColumnSpan="2" Background="#7FFFFFFF" Visibility="Collapsed">
            <TextBlock x:Name="textBlockConnecting" Text="データベースに接続中..." HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>
        </Grid>
    </Grid>
</Window>
