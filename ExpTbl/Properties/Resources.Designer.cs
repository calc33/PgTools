//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Db2Source.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Db2Source.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   select a.attname as column_name, a.attnum as ordinal_position
        ///from pg_catalog.pg_attribute a
        ///where a.attrelid = :oid
        ///--  and 0 &lt; a.attnum
        ///order by a.attnum に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColumnSQL {
            get {
                return ResourceManager.GetString("ColumnSQL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   [TABLE_SQL]
        ///# ExpTbl.cfg対象となるテーブルの一覧を取得するSQL、select文の項目名は変更しないこと
        ///select c.oid, ns.nspname as table_schema, c.relname as table_name
        ///from pg_class c
        ///  join pg_namespace ns on (c.relnamespace = ns.oid)
        ///where c.relkind = &apos;r&apos;
        ///  and ns.nspname not in (&apos;information_schema&apos;, &apos;pg_catalog&apos;, &apos;pg_toast&apos;)
        ///order by ns.nspname, c.relname
        ///[FIXED_RULE]
        ///# DBExpではタイムスタンプ項目(登録日,変更日)にSYSDATEを設定していましたが
        ///# PostgreSQLでは固定項目に関数を使えなくなりました。
        ///# 定数のみ使用できます。
        ///
        ///[IGNORE_FIELDS]
        ///# タイムスタンプ項目についてはこちらでデータ出力時にスキップするよう設定してください
        ///creat [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DBExpRule {
            get {
                return ResourceManager.GetString("DBExpRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   select c.conname, c.conkey
        ///from pg_catalog.pg_constraint c
        ///where c.conrelid = :oid
        ///  and c.contype in (&apos;p&apos;, &apos;u&apos;)
        ///order by c.contype, c.conname に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string KeyConsSQL {
            get {
                return ResourceManager.GetString("KeyConsSQL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   select c.oid, ns.nspname as table_schema, c.relname as table_name
        ///from pg_class c
        ///  join pg_namespace ns on (c.relnamespace = ns.oid)
        ///where c.relkind = &apos;r&apos;
        ///  and ns.nspname not in (&apos;information_schema&apos;, &apos;pg_catalog&apos;, &apos;pg_toast&apos;)
        ///order by ns.nspname, c.relname
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string TableSQL {
            get {
                return ResourceManager.GetString("TableSQL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ExpTblはスキーマ定義情報を出力します
        ///使用方法:
        ///ExpTbl exp [OPTIONS]... [Directory]
        ///ExpTbl genconf [OPTIONS]... [CONFIGFILE]
        ///ExpTbl genrule [OPTIONS]... [RULEFILE]
        ///
        ///  exp        テーブルのデータをファイルに出力します
        ///  genconf    ファイルの出力を制御する設定ファイルを生成します
        ///             CONFIGFILE を省略すると &quot;ExpTBl.cfg&quot; に書き出します
        ///  genrule    genconf で使用するルールファイルのテンプレートを生成します
        ///             RULEFILE を省略すると &quot;ExpTBlRule.cfg&quot; に書き出します
        ///一般的なオプション:
        ///  -?, --help                このヘルプを表示し、終了します
        ///
        ///出力内容を制御するためのオプション:
        ///  -E, --encoding=ENCODING  ENCODING符号化方式でデータをダンプ
        ///  - [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Usage {
            get {
                return ResourceManager.GetString("Usage", resourceCulture);
            }
        }
    }
}
